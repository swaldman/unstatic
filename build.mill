//| mill-version: 1.0.0
//| mill-jvm-version: 17
//+---------------------------------------------------------------

package build

import mill.*
import mill.javalib.publish.{Developer,License,PomSettings,VersionControl}
import mill.scalalib.*
import mill.scalalib.publish.*

trait UnstaticBuildModule extends ScalaModule with SonatypeCentralPublishModule {
  val UnstaticVersion   = "0.4.0-SNAPSHOT"

  object Dependency {
    val UntemplateVersion = "0.1.4"
    val TapirVersion      = "1.10.9"
    val FlexmarkVersion   = "0.64.8"

    val Untemplate = mvn"com.mchange::untemplate:${UntemplateVersion}" // mill.scalalib.Dep
    val Scribe     = mvn"com.outr::scribe:3.15.0"

    // it'd save some repetition if these could be Products. maybe a fun macro project?
    object ZTapir {
      val AudiofluidityRss   = mvn"com.mchange::audiofluidity-rss:0.1.1"
      val Conveniences       = mvn"com.mchange::conveniences:0.0.5"
      val Mailutil           = mvn"com.mchange::mailutil:0.0.4"
      val TapirFiles         = mvn"com.softwaremill.sttp.tapir::tapir-files:${TapirVersion}"
      val TapirZio           = mvn"com.softwaremill.sttp.tapir::tapir-zio:${TapirVersion}"
      val TapirZioHttpServer = mvn"com.softwaremill.sttp.tapir::tapir-zio-http-server:${TapirVersion}"
      val JGit               = mvn"org.eclipse.jgit:org.eclipse.jgit:6.9.0.202403050737-r"
      val Jsoup              = mvn"org.jsoup:jsoup:1.17.2"
      val JavaDiffUtils      = mvn"io.github.java-diff-utils:java-diff-utils:4.12"
      val FlexmarkSeq        = Seq (
        mvn"com.vladsch.flexmark:flexmark:${FlexmarkVersion}",
        mvn"com.vladsch.flexmark:flexmark-ext-footnotes:${FlexmarkVersion}",
        mvn"com.vladsch.flexmark:flexmark-ext-tables:${FlexmarkVersion}",
        mvn"com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:${FlexmarkVersion}",
        mvn"com.vladsch.flexmark:flexmark-ext-anchorlink:${FlexmarkVersion}",
      )
    }
    object Test {
      val Scalacheck = mvn"org.scalacheck::scalacheck:1.18.0"
      val Utest      = mvn"com.lihaoyi::utest:0.8.3"
    }
  }

  override def scalaVersion = "3.3.6"
  // override def scalacOptions = Task { Seq("-explain") }
  override def scalacOptions = Task { Seq("-deprecation") }

  private def pomSettings(name: String) = PomSettings(
    description = "Towards a static site generator generator (and dynamic sites too)",
    organization = "com.mchange",
    url = "https://github.com/swaldman/unstatic",
    licenses = Seq(License.`Apache-2.0`),
    versionControl = VersionControl.github("swaldman", name),
    developers = Seq(
      Developer("swaldman", "Steve Waldman", "https://github.com/swaldman")
    )
  )

  override def publishVersion = Task {UnstaticVersion}
  override def pomSettings    = Task {pomSettings(artifactName())}
}

object `package` extends UnstaticBuildModule {
  override def artifactName = Task {"unstatic"}
  override def mvnDeps = Task { super.mvnDeps() ++ Seq(Dependency.Untemplate, Dependency.Scribe) }

  object test extends ScalaTests {
    override def scalaVersion = Task {build.scalaVersion()}
    override def mvnDeps = Task { super.mvnDeps() ++ Seq(Dependency.Test.Scalacheck, Dependency.Test.Utest) }
    override def testFramework = "utest.runner.Framework"
  }
  object ztapir extends UnstaticBuildModule {
    override def moduleDeps = Seq(build)
    override def artifactName = Task {"unstatic-ztapir"}
    override def mvnDeps = Task {
      super.mvnDeps() ++
        Seq(
          Dependency.ZTapir.Conveniences,
          Dependency.ZTapir.Mailutil,
          Dependency.ZTapir.TapirFiles,
          Dependency.ZTapir.TapirZio,
          Dependency.ZTapir.TapirZioHttpServer,
          Dependency.ZTapir.AudiofluidityRss,
          Dependency.ZTapir.Jsoup,
          Dependency.ZTapir.JGit,
          Dependency.ZTapir.JavaDiffUtils,
        ) ++ Dependency.ZTapir.FlexmarkSeq
    }
  }
}

